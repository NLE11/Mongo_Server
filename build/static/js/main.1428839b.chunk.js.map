{"version":3,"sources":["Reducers.js","User/LogIn.js","User/Register.js","User/UserBar.js","Header.js","Pages/HeaderBar.js","Task.js","TodoList.js","Pages/HomePage.js","CreateTask.js","Pages/TaskPage.js","User.js","UserList.js","Pages/UserListPage.js","Pages/UserPage.js","App.js","reportWebVitals.js","index.js","Contexts.js"],"names":["userReducer","state","action","type","username","access_token","undefined","taskReducer","id","title","description","dateCreated","dateCompleted","complete","remainTask","filter","task","updateTask","prevTask","tasks","usersReducer","users","appReducer","user","Login","show","handleClose","dispatch","useContext","StateContext","useState","setUsername","loginFailed","setLoginFailed","password","setPassword","useResource","url","method","data","login","useEffect","isLoading","error","alert","console","log","Modal","onHide","Form","onSubmit","e","preventDefault","Header","closeButton","Title","Body","Label","htmlFor","Control","value","onChange","evt","target","name","Text","style","color","Footer","Button","variant","onClick","disabled","length","Register","passwordRepeat","formData","setFormData","setStatus","passwordConfirm","register","UserBar","showLogin","setShowLogin","showRegister","setShowRegister","Logout","React","lazy","className","text","theme","ThemeContext","href","Navbar","Brand","primaryColor","HeaderBar","setTheme","bg","expand","Container","Toggle","Collapse","Nav","Link","Suspense","fallback","Task","short","today","Date","month","getMonth","year","getFullYear","date","getDate","hours","addZero","getHours","minutes","getMinutes","seconds","getSeconds","complete_date_and_time","num","secondaryColor","processedDescription","substring","deleteTask","statusTask","toggleTask","Card","Subtitle","checked","completeDate","size","memo","TodoList","sort","argument1","argument2","map","t","i","key","index","HomePage","headers","Authorization","getTasks","CreateTask","setTitle","setDescription","current_date_time","author","createTask","navigation","useNavigation","navigate","TaskPage","getTask","User","_id","UserList","u","UserListPage","getUsers","UserPage","App","useReducer","routes","mount","route","view","req","params","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axiosInstance","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.1428839b.chunk.js","sourcesContent":["// import nextId from \"react-id-generator\"; // npm install react-id-generator\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n    case \"REGISTER\":\n      return {\n        username: action.username,\n        access_token: action.access_token,\n      };\n    case \"LOGOUT\":\n      return {\n        username: undefined,\n        access_token: undefined,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction taskReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_TASK\":\n      const newTask = {\n        id: action.id, // We cannot use the nextId() because the server sent us a new one\n        title: action.title,\n        description: action.description,\n        dateCreated: action.dateCreated,\n        dateCompleted: action.dateCompleted,\n        complete: action.complete,\n      };\n      return [newTask, ...state];\n    case \"TOGGLE_TASK\":\n      const remainTask = state.filter((task) => task.id !== action.id);\n      const updateTask = {\n        id: action.id,\n        title: action.title,\n        description: action.description,\n        dateCreated: action.dateCreated,\n        dateCompleted: action.dateCompleted,\n        complete: action.complete,\n      };\n      return [...remainTask, updateTask]; // prevTask has some values not just one\n    case \"DELETE_TASK\":\n      const prevTask = state.filter((task) => task.id !== action.id);\n      return [...prevTask]; // only return the prev task\n    case \"FETCH_TASKS\":\n      return action.tasks; // Grab the tasks from the server\n    case \"CLEAR_TASKS\":\n      return [];\n    default:\n      return state;\n  }\n}\n\nfunction usersReducer(state, action) {\n  switch (action.type) {\n    case \"FETCH_USERS\":\n      return action.users;\n    default:\n      return state;\n  }\n}\nexport default function appReducer(state, action) {\n  //In this appReducer function, we are going to call the other two reducer functions, and return the full state tree:\n\n  return {\n    user: userReducer(state.user, action),\n    tasks: taskReducer(state.tasks, action),\n    users: usersReducer(state.users, action),\n  };\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StateContext } from \"../Contexts\";\nimport { useResource } from \"react-request-hook\";\n\nimport { Modal, Form, Button } from \"react-bootstrap\";\n\nexport default function Login({ show, handleClose }) {\n  const { dispatch } = useContext(StateContext); // Take dispatch from StateContext\n  const [username, setUsername] = useState(\"\");\n\n  const [loginFailed, setLoginFailed] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  function handleUsername(evt) {\n    setUsername(evt.target.value);\n  }\n\n  function handlePassword(evt) {\n    setPassword(evt.target.value);\n  }\n\n  // Retrieve information from db.jason\n  const [user, login] = useResource((username, password) => ({\n    url: \"auth/login\",\n    method: \"post\",\n    data: { username, password },\n  }));\n\n  // Track to see if it's a fail or successful log in\n  useEffect(() => {\n    if (user && user.isLoading === false && (user.data || user.error)) {\n      if (user.error) {\n        setLoginFailed(true);\n        alert(\"failed\");\n      } else {\n        setLoginFailed(false);\n        console.log(user.data);\n        dispatch({\n          type: \"LOGIN\",\n          username,\n          access_token: user.data.access_token,\n        });\n      }\n    }\n  }, [user]);\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login(username, password);\n          handleClose();\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* Onsubmit prevent browsers to refresh the page */}\n          <Form.Label htmlFor=\"login-username\">Username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={username}\n            onChange={handleUsername}\n            name=\"login-username\"\n            id=\"login-username\"\n          />\n          <Form.Label htmlFor=\"login-password\">Password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={handlePassword}\n            name=\"login-password\"\n            id=\"login-password\"\n          />\n          {loginFailed && (\n            <Form.Text style={{ color: \"red\" }}>\n              Invalid username or password\n            </Form.Text>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            disabled={username.length === 0}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StateContext } from \"../Contexts\";\nimport { useResource } from \"react-request-hook\";\n\nimport { Form, Modal, Button } from \"react-bootstrap\";\n\nexport default function Register({ show, handleClose }) {\n  const { dispatch } = useContext(StateContext); // Take the dispatch from StateContext\n  // We use simplify here\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordRepeat: \"\",\n  });\n\n  const [status, setStatus] = useState(\"\");\n  const [user, register] = useResource((username, password) => ({\n    url: \"auth/register\",\n    method: \"post\",\n    data: { username, password, passwordConfirm: password },\n  }));\n\n  useEffect(() => {\n    if (user && user.data) {\n      dispatch({ type: \"REGISTER\", username: user.data.username });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user && user.isLoading === false && (user.data || user.error)) {\n      if (user.error) {\n        console.log(user);\n        setStatus(\"Registration failed, please try again later.\");\n        alert(\"fail\");\n      } else {\n        console.log(user);\n        setStatus(\"Registration successful. You may now login.\");\n        alert(\"success\");\n      } //dispatch({ type: 'REGISTER', username: user.data.username })\n    }\n  }, [user]);\n  // const [ username, setUsername ] = useState('')\n  // const [ password, setPassword ] = useState('')\n  // const [ passwordRepeat, setPasswordRepeat ] = useState('')\n  // function handleUsername (evt) { setUsername(evt.target.value) }\n  // function handlePassword (evt) { setPassword(evt.target.value) }\n  // function handlePasswordRepeat (evt) { setPasswordRepeat(evt.target.value) }\n  return (\n    // Set the prop here\n    <Modal show={show} onHide={handleClose}>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          register(formData.username, formData.password);\n          handleClose();\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Label htmlFor=\"register-username\">Username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={formData.username}\n            onChange={(e) =>\n              setFormData({ ...formData, username: e.target.value })\n            }\n            name=\"register-username\"\n            id=\"register-username\"\n          />\n          <Form.Label htmlFor=\"register-password\">Password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"register-password\"\n            id=\"register-password\"\n            value={formData.password}\n            onChange={(e) =>\n              setFormData({ ...formData, password: e.target.value })\n            }\n          />\n          <Form.Label htmlFor=\"register-password-repeat\">\n            Repeat password:\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"register-password-repeat\"\n            id=\"register-password-repeat\"\n            value={formData.passwordRepeat}\n            onChange={(e) =>\n              setFormData({ ...formData, passwordRepeat: e.target.value })\n            }\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={\n              formData.username.length === 0 ||\n              formData.password.length === 0 ||\n              formData.password !== formData.passwordRepeat\n            }\n          >\n            Register\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Login from \"./LogIn\";\nimport Register from \"./Register\";\nimport { StateContext } from \"../Contexts\";\nimport { Button } from \"react-bootstrap\";\n\n// Start at Userbar: Import useState hook, set up some state to hold user and then use map to update user, pass setUser to login, logout component as a prob.\n// Function setUser can now be used in LogIn LogOut and Register\nexport default function UserBar() {\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  const Logout = React.lazy(() => import(\"./LogOut\")); // Import the log out component here\n  // const [ user, setUser ] = useState('') // This is the State hook. If I put a name in here, it returns Logout. Moving this to App.\n  const { state } = useContext(StateContext); // Take the state from StateContext\n  // If user return empty then log out, if not, return log in or register\n  if (state.user.username) {\n    return <Logout />;\n  } else {\n    return (\n      <div className=\"justify-content-end\">\n        <Button variant=\"link\" onClick={(e) => setShowLogin(true)}>\n          Login\n        </Button>\n        <Login show={showLogin} handleClose={() => setShowLogin(false)} />\n        <Button variant=\"link\" onClick={(e) => setShowRegister(true)}>\n          Register\n        </Button>\n        <Register\n          show={showRegister}\n          handleClose={() => setShowRegister(false)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"./Contexts\";\nimport { Link } from \"react-navi\";\n\nimport { Navbar } from \"react-bootstrap\";\n\nconst Header = ({ text }) => {\n  const theme = useContext(ThemeContext); //useContext\n  return (\n    <Link href=\"/\">\n      <Navbar.Brand style={{ color: theme.primaryColor }}>{text}</Navbar.Brand>\n    </Link>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\n// import CreateTask from \"../CreateTask\";\nimport UserBar from \"../User/UserBar\";\nimport Header from \"../Header\";\n// import ChangeTheme from \"../ChangeTheme\";\nimport { ThemeContext, StateContext } from \"../Contexts\";\nimport { Link } from \"react-navi\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\n\nexport default function HeaderBar({ setTheme }) {\n  const theme = useContext(ThemeContext);\n  const { state } = useContext(StateContext);\n  const { user } = state;\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"/\">\n          <Header text=\"MY TODO\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {user.username && (\n              <Nav.Link>\n                <Link href=\"/task/create\">Create New Task</Link>\n              </Nav.Link>\n            )}\n            {\n              <Nav.Link>\n                <Link href=\"/user\">User List</Link>\n              </Nav.Link>\n            }\n            {/* <ChangeTheme theme={theme} setTheme={setTheme} /> */}\n          </Nav>\n          <React.Suspense fallback={\"Loading...\"}>\n            <UserBar />\n          </React.Suspense>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { ThemeContext, StateContext } from \"./Contexts\";\n\nimport { Link } from \"react-navi\";\nimport { Card, Button } from \"react-bootstrap\";\n\nfunction Task({\n  id,\n  title,\n  description,\n  dateCreated,\n  dateCompleted,\n  complete,\n  short = false,\n  //dispatch, //No need this because we already pass the dispatch from StateContext\n}) {\n  let today = new Date();\n  let month = today.getMonth() + 1;\n  let year = today.getFullYear();\n  let date = today.getDate();\n  let hours = addZero(today.getHours());\n  let minutes = addZero(today.getMinutes());\n  let seconds = addZero(today.getSeconds());\n  let complete_date_and_time = `${month}/${date}/${year} ${hours}:${minutes}:${seconds}`;\n\n  function addZero(num) {\n    return num < 10 ? `0${num}` : num;\n  }\n\n  const { secondaryColor } = useContext(ThemeContext); // Take out the secondary color from the ThemeContext and use it for title\n  const { dispatch } = useContext(StateContext);\n\n  let processedDescription = description;\n  if (short) {\n    if (description.length > 30) {\n      processedDescription = description.substring(0, 30) + \"...\";\n    }\n  }\n\n  const [task, deleteTask] = useResource(() => ({\n    url: `/tasks/${id}`,\n    method: \"delete\",\n  }));\n\n  const [statusTask, toggleTask] = useResource(\n    ({ complete, dateCompleted }) => ({\n      // Pass the arguments that need to change\n      url: `/tasks/${id}`,\n      method: \"patch\",\n      data: { complete, dateCompleted },\n    })\n  );\n\n  useEffect(() => {\n    if (task && task.isLoading === false && task.data !== undefined) {\n      // Check if the task exists on server\n      dispatch({ type: \"DELETE_TASK\", id: task.data.id });\n    }\n  }, [task]);\n\n  useEffect(() => {\n    if (statusTask && statusTask.isLoading === false && statusTask.data) {\n      dispatch({\n        // This to decide which fields I want to update\n        type: \"TOGGLE_TASK\",\n        id: statusTask.data.id,\n        complete: statusTask.data.complete,\n        dateCompleted: statusTask.data.dateCompleted,\n        dateCreated: statusTask.data.dateCreated,\n        description: statusTask.data.description,\n        title: statusTask.data.title,\n      });\n    }\n  }, [statusTask]);\n\n  const handleDelete = () => {\n    deleteTask();\n  };\n\n  const handleComplete = (evt) => {\n    let completeDate = null;\n    if (evt.target.checked) {\n      completeDate = complete_date_and_time;\n    } else {\n      completeDate = null;\n    }\n    toggleTask({ complete: evt.target.checked, dateCompleted: completeDate });\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          <Link style={{ color: secondaryColor }} href={`/task/${id}`}>\n            {title}\n          </Link>\n        </Card.Title>\n        <br></br>\n        <Card.Subtitle>\n          <i>\n            Date Created: <b>{dateCreated}</b>\n            <br></br>\n          </i>\n          <i>\n            Date Completed: <b>{dateCompleted}</b>\n            <br></br>\n          </i>\n          <div>\n            <label>\n              {\" \"}\n              <input\n                type=\"checkbox\"\n                checked={complete} // Pay attention on the checkbox\n                onChange={handleComplete}\n              ></input>\n              Complete\n            </label>\n          </div>\n          <Button variant=\"primary\" onClick={handleDelete} size=\"sm\">\n            Delete\n          </Button>{\" \"}\n        </Card.Subtitle>\n        <br></br>\n        <Card.Text>{processedDescription}</Card.Text>\n        {short && <Link href={`/task/${id}`}>View full task</Link>}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default React.memo(Task);\n","import React, { useContext } from \"react\";\nimport Task from \"./Task\";\n\nimport { StateContext } from \"./Contexts\";\n\nexport default function TodoList() {\n  const { state } = useContext(StateContext);\n  const { tasks } = state;\n  //pass the dispatch\n  return (\n    // This supposes to be <Task title = {t.title} description = {t.description} key = {'task-' + i} />\n    <div>\n      <h2> </h2>\n      {tasks\n        .sort((argument1, argument2) => (argument1.id > argument2.id ? 1 : -1))\n        .map((t, i) => (\n          <Task {...t} short={true} key={\"task-\" + i} index={t.id} />\n        ))}\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Contexts\";\nimport { useResource } from \"react-request-hook\";\nimport TodoList from \"../TodoList\";\n\nexport default function HomePage() {\n  const { state, dispatch } = useContext(StateContext);\n  const [tasks, getTasks] = useResource(() => ({\n    url: \"/task\",\n    method: \"get\",\n    headers: { Authorization: `${state.user.access_token}` },\n  }));\n\n  // useEffect(() => {\n  //   if (state.user.access_token) {\n  //     getTasks();\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    getTasks();\n  }, [state.user.access_token]);\n\n  useEffect(() => {\n    // This useEffect hoook only trigger the network call when the tasks change\n    if (tasks && tasks.isLoading === false && tasks.data) {\n      dispatch({ type: \"FETCH_TASKS\", tasks: tasks.data.tasks }); // Within the tasks reducers I need a new action FETCH_TASK\n    }\n  }, [tasks]);\n\n  const { data, isLoading } = tasks;\n  return (\n    <>\n      {isLoading && \"Tasks loading...\"} <TodoList />\n    </>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StateContext } from \"./Contexts\";\nimport { useResource } from \"react-request-hook\";\n\nimport { useNavigation } from \"react-navi\";\n\nexport default function CreateTask() {\n  const { state, dispatch } = useContext(StateContext);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  let today = new Date();\n  let month = today.getMonth() + 1;\n  let year = today.getFullYear();\n  let date = today.getDate();\n  let hours = addZero(today.getHours());\n  let minutes = addZero(today.getMinutes());\n  let seconds = addZero(today.getSeconds());\n  let current_date_time = `${month}/${date}/${year} ${hours}:${minutes}:${seconds}`;\n\n  function addZero(num) {\n    return num < 10 ? `0${num}` : num;\n  }\n\n  console.log(current_date_time);\n\n  // Make a call using resource hook to make a POST request to our API to persist the data to db.json before calling dispatch which update the whole state\n  const [task, createTask] = useResource(\n    ({ title, description, dateCreated, dateCompleted, complete, author }) => ({\n      url: \"/task\",\n      method: \"post\",\n      headers: { Authorization: `${state.user.access_token}` },\n      data: {\n        title,\n        description,\n        dateCreated,\n        dateCompleted,\n        complete,\n        author,\n      },\n    })\n  );\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    if (task && task.isLoading === false && task.data) {\n      // if the isLoading is false then the response is success then we can perform the dispatch\n      dispatch({\n        type: \"CREATE_TASK\",\n        id: task.data.id,\n        title: task.data.title,\n        description: task.data.description,\n        dateCreated: task.data.dateCreated,\n        dateCompleted: task.data.dateCompleted,\n        complete: task.data.complete,\n        author: state.user.username,\n      });\n      console.log(task.data);\n      navigation.navigate(`/task/${task.data.id}`); // Create task at this task\n    }\n  }, [task]);\n\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleCreate() {\n    createTask({\n      title,\n      description,\n      dateCreated: current_date_time,\n      dateCompleted: null,\n      complete: false,\n      author: state.user.username,\n    });\n  }\n\n  // function handleCreate () {\n  //     const newTask = { title, description, author: user } // Build a task object\n  //     setTasks([ newTask, ...tasks ]) // Create a new array starting with newTask\n  // }\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleCreate();\n      }}\n    >\n      <div>\n        User: <b>{state.user.username}</b>\n      </div>\n      <div>\n        <label htmlFor=\"create-title\">Title:</label> <br />\n        <input\n          type=\"text\"\n          value={title}\n          onChange={handleTitle}\n          name=\"create-title\"\n          id=\"create-title\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"create-description\">Description:</label> <br />\n        <textarea value={description} onChange={handleDescription} />\n      </div>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../Contexts\";\n\nimport Task from \"../Task\";\nimport { Link } from \"react-navi\";\n\nexport default function TaskPage({ id }) {\n  const { state } = useContext(StateContext);\n  const [task, getTask] = useResource(() => ({\n    url: `/task/${id}`,\n    headers: { Authorization: `${state.user.access_token}` },\n    method: \"get\",\n  }));\n  useEffect(getTask, [id]);\n\n  return (\n    // In case the network is not completed, loading...\n    <div>\n      {task && task.data ? <Task {...task.data} /> : \"Loading...\"}\n      <hr />\n      <div>\n        <Link href=\"/\">Go back</Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\n\nimport { useNavigation } from \"react-navi\";\nimport { Card } from \"react-bootstrap\";\n\nfunction User({ _id, username }) {\n  const navigation = useNavigation();\n  function navigate() {\n    navigation.navigate(`/user/${_id}`);\n  }\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title onClick={navigate}>{username}</Card.Title>\n        <br></br>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default React.memo(User);\n","import React, { useContext } from \"react\";\nimport User from \"./User\";\n\nimport { StateContext } from \"./Contexts\";\n\nexport default function UserList() {\n  const { state } = useContext(StateContext);\n  const { users } = state;\n  //pass the dispatch\n  return (\n    // This supposes to be <User author = {u.author} key = {'user-' + i} />\n    <div>\n      <h2> User List</h2>\n      {users\n        .sort((argument1, argument2) =>\n          argument1._id > argument2._id ? 1 : -1\n        )\n        .map((u, i) => (\n          <User {...u} short={true} key={\"user-\" + i} index={u._id} />\n        ))}\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport { StateContext } from \"../Contexts\";\nimport { useResource } from \"react-request-hook\";\nimport UserList from \"../UserList\";\n\nexport default function UserListPage() {\n  const { state, dispatch } = useContext(StateContext);\n  const [users, getUsers] = useResource(() => ({\n    url: \"/user\",\n    method: \"get\",\n  }));\n\n  useEffect(getUsers, []);\n\n  useEffect(() => {\n    // This useEffect hoook only trigger the network call when the tasks change\n    if (users && users.isLoading === false && users.data) {\n      dispatch({ type: \"FETCH_USERS\", users: users.data.users }); // Within the tasks reducers I need a new action FETCH_TASK\n    }\n  }, [users]);\n\n  const { data, isLoading } = users;\n  return (\n    <>\n      {isLoading && \"Users loading...\"} <UserList />\n    </>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../Contexts\";\n\nimport User from \"../User\";\nimport { Link } from \"react-navi\";\nimport TodoList from \"../TodoList\";\n\nexport default function UserPage({ id }) {\n  console.log(id);\n  const { state, dispatch } = useContext(StateContext);\n  const [tasks, getTasks] = useResource(() => ({\n    url: `/user/${id}`,\n    method: \"get\",\n  }));\n\n  useEffect(getTasks, []);\n\n  useEffect(() => {\n    // This useEffect hoook only trigger the network call when the tasks change\n    if (tasks && tasks.isLoading === false && tasks.data) {\n      dispatch({ type: \"FETCH_TASKS\", tasks: tasks.data }); // Within the tasks reducers I need a new action FETCH_TASK\n    }\n  }, [tasks]);\n  const { data, isLoading } = tasks;\n  return (\n    // In case the network is not completed, loading...\n    <div>\n      {/* {task && task.data ? <Task {...task.data} /> : \"Loading...\"} */}\n      <hr />\n      <div>\n        <Link href=\"/\">Go back</Link>\n        {isLoading && \"Tasks loading...\"} <TodoList />\n      </div>\n    </div>\n  );\n}\n","// Shift + Option + F\nimport React, { useState, useEffect } from \"react\";\nimport { useReducer } from \"react\";\n//import UserBar from \"./User/UserBar\";\n//import CreateTask from \"./CreateTask\";\n//import TodoList from \"./TodoList\";\n//import Header from \"./Header\";\n\nimport { ThemeContext, StateContext } from \"./Contexts\";\n\nimport appReducer from \"./Reducers\";\n//import ChangeTheme from \"./ChangeTheme\";\n\nimport HeaderBar from \"./Pages/HeaderBar\";\nimport HomePage from \"./Pages/HomePage\";\n\n//import { useResource } from \"react-request-hook\";\n\nimport { mount, route } from \"navi\";\nimport { Router, View } from \"react-navi\";\nimport CreateTask from \"./CreateTask\";\nimport TaskPage from \"./Pages/TaskPage\";\n//export const ThemeContext = React.createContext({ primaryColor: \"blue\" }); //Create a context with one key blue\n\nimport { Container } from \"react-bootstrap\";\nimport UserListPage from \"./Pages/UserListPage\";\nimport UserPage from \"./Pages/UserPage\";\n\nfunction App() {\n  const initialTasks = [];\n\n  // const [ user, setUser ] = useState('')  // Move the hook here\n  // const [ tasks, setTasks ] = useState(initialTasks)\n  // const [user, dispatchUser] = useReducer(userReducer, \"\"); // The first parameter is the function that we defines\n\n  // const [tasks, dispatchTasks] = useReducer(taskReducer, initialTasks);\n\n  // replace the two reducers in App.js with a single reducer hook\n\n  // const [tasks, getTasks] = useResource(() => ({\n  //   url: \"/tasks\",\n  //   method: \"get\",\n  // }));\n\n  const [state, dispatch] = useReducer(appReducer, {\n    user: {},\n    tasks: initialTasks, // Define tasks with an empty list\n    users: [],\n  });\n\n  // useEffect(getTasks, []);\n\n  // useEffect(() => {\n  //   // This useEffect hoook only trigger the network call when the tasks change\n  //   if (tasks && tasks.data) {\n  //     dispatch({ type: \"FETCH_TASKS\", tasks: tasks.data.reverse() }); // Within the tasks reducers I need a new action FETCH_TASK\n  //   }\n  // }, [tasks]);\n\n  // Update state\n  const { user } = state;\n\n  const [theme, setTheme] = useState({\n    primaryColor: \"brown\",\n    secondaryColor: \"green\",\n  });\n\n  const routes = mount({\n    \"/\": route({ view: <HomePage /> }),\n    \"/task/create\": route({ view: <CreateTask /> }),\n    \"/task/:id\": route((req) => {\n      return { view: <TaskPage id={req.params.id} /> };\n    }),\n    \"/user\": route({ view: <UserListPage /> }),\n    \"/user/:id\": route((req) => {\n      return { view: <UserPage id={req.params.id} /> };\n    }),\n  });\n\n  return (\n    // <Task title = \"First Note\" content = \"Empty\" author = \"Nghia Le\" /> <br/>\n    // {user && <CreateTask user={user} /> }  >>> If condition, showing nothing\n    // Set up ThemeContext.Provider override the color blue to red\n    // Set up StateContext.Provider to pass the state and dispatch from Reducers, Userbar no longer accepts props\n    // Define the fall back by React\n    <div>\n      <ThemeContext.Provider value={theme}>\n        <StateContext.Provider value={{ state: state, dispatch: dispatch }}>\n          {/* <HeaderBar setTheme={setTheme} />\n          <HomePage /> */}\n          <Router routes={routes}>\n            {/* Replace div with container */}\n            <Container>\n              <HeaderBar setTheme={setTheme} />\n              <hr />\n              <View />\n            </Container>\n          </Router>\n\n          {/* <Header text=\"My Todo List\" />\n          <ChangeTheme theme={theme} setTheme={setTheme} />\n          <React.Suspense fallback={\"Loading...\"}>\n            <UserBar /> <br />\n          </React.Suspense>\n          {user && <CreateTask />} */}\n          {/* <TodoList /> */}\n        </StateContext.Provider>\n      </ThemeContext.Provider>\n    </div>\n  ); //the TodoList iterates through the list and display each task\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RequestProvider } from \"react-request-hook\";\nimport axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  // baseURL: \"/\", // Passing the proxy path\n  baseURL: \"/\",\n});\n\n// Render the app in the root div within the html in the public folder\nReactDOM.render(\n  <React.StrictMode>\n    <RequestProvider value={axiosInstance}>\n      <App />\n    </RequestProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\n\nexport const ThemeContext = React.createContext({\n  primaryColor: \"deepskyblue\", // Give default value\n  secondaryColor: \"coral\",\n});\n\nexport const StateContext = React.createContext({\n  state: {}, // Give default value\n  dispatch: () => {},\n});\n"],"sourceRoot":""}